// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5
// Source: behavior.proto

package server

import (
	"context"

	"github.com/ziptako/behavior/behavior"
	"github.com/ziptako/behavior/internal/logic/behaviorservice"
	"github.com/ziptako/behavior/internal/svc"
)

type BehaviorServiceServer struct {
	svcCtx *svc.ServiceContext
	behavior.UnimplementedBehaviorServiceServer
}

func NewBehaviorServiceServer(svcCtx *svc.ServiceContext) *BehaviorServiceServer {
	return &BehaviorServiceServer{
		svcCtx: svcCtx,
	}
}

// RecordBehavior 记录行为数据
func (s *BehaviorServiceServer) RecordBehavior(ctx context.Context, in *behavior.RecordBehaviorRequest) (*behavior.RecordBehaviorResponse, error) {
	l := behaviorservicelogic.NewRecordBehaviorLogic(ctx, s.svcCtx)
	return l.RecordBehavior(in)
}

// BatchRecordBehavior 批量记录行为数据
func (s *BehaviorServiceServer) BatchRecordBehavior(ctx context.Context, in *behavior.BatchRecordBehaviorRequest) (*behavior.BatchRecordBehaviorResponse, error) {
	l := behaviorservicelogic.NewBatchRecordBehaviorLogic(ctx, s.svcCtx)
	return l.BatchRecordBehavior(in)
}

// GetBehavior 根据ID获取行为数据详情
func (s *BehaviorServiceServer) GetBehavior(ctx context.Context, in *behavior.GetBehaviorRequest) (*behavior.Behavior, error) {
	l := behaviorservicelogic.NewGetBehaviorLogic(ctx, s.svcCtx)
	return l.GetBehavior(in)
}

// ListBehaviors 分页查询行为数据列表
func (s *BehaviorServiceServer) ListBehaviors(ctx context.Context, in *behavior.ListBehaviorsRequest) (*behavior.ListBehaviorsResponse, error) {
	l := behaviorservicelogic.NewListBehaviorsLogic(ctx, s.svcCtx)
	return l.ListBehaviors(in)
}

// DeleteBehavior 删除行为数据
func (s *BehaviorServiceServer) DeleteBehavior(ctx context.Context, in *behavior.DeleteBehaviorRequest) (*behavior.DeleteBehaviorResponse, error) {
	l := behaviorservicelogic.NewDeleteBehaviorLogic(ctx, s.svcCtx)
	return l.DeleteBehavior(in)
}

// BatchDeleteBehavior 批量删除行为数据
func (s *BehaviorServiceServer) BatchDeleteBehavior(ctx context.Context, in *behavior.BatchDeleteBehaviorRequest) (*behavior.BatchDeleteBehaviorResponse, error) {
	l := behaviorservicelogic.NewBatchDeleteBehaviorLogic(ctx, s.svcCtx)
	return l.BatchDeleteBehavior(in)
}
